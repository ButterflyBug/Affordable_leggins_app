{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["SingleLeggin","props","leggin","leggin_id","target","href","leggin_name","leggin_price","leggin_rrp","sizes","join","Leggins","leggins","map","item","App","useState","setLeggins","loaded","setLoaded","useEffect","fetch","then","response","json","sort","itemA","itemB","legginsResult","className","Container","fluid","Row","Table","striped","bordered","hover","variant","responsive","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSASA,SAASA,EAAaC,GAAyB,IAAD,EACpCC,EAAWD,EAAXC,OAER,OACE,+BACE,6BAAKA,EAAOC,YACZ,6BAAI,mBAAGC,OAAO,SAASC,KAAI,mCAA8BH,EAAOC,UAArC,SAAvB,SAA+ED,EAAOI,gBAC1F,6BAAKJ,EAAOK,eACZ,6BAAKL,EAAOM,aACZ,uCAAKN,EAAOO,aAAZ,aAAK,EAAcC,KAAK,WAM9B,SAASC,EAAQV,GAA4B,IACnCW,EAAYX,EAAZW,QAER,OAAQ,mCACLA,EAAQC,KAAI,SAACC,GAAD,OAAU,cAACd,EAAD,CAAcE,OAAQY,SA8DlCC,MAtDf,WAAgB,IAAD,EACiBC,mBAAc,IAD/B,mBACNJ,EADM,KACGK,EADH,OAEeD,oBAAc,GAF7B,mBAENE,EAFM,KAEEC,EAFF,KA6Bb,OAzBAC,qBAAU,WACR,IAAIF,EARCG,MAAM,kEAWRC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUA,EAAKZ,WACpBU,MAAK,SAACV,GAAD,OAAaA,EAAQa,MAAK,SAACC,EAAYC,GAAb,OAA4BD,EAAMnB,aAAeoB,EAAMpB,mBACtFe,MAAK,SAACM,GACLX,EAAWW,GACXT,GAAU,SAiBd,qBAAKU,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAOC,YAAU,EAAvD,UACE,gCACE,+BACE,2CACA,sCACA,uCACA,8CACA,4CAGJ,gCAzBJpB,EACK,cAACP,EAAD,CAASC,QAASA,IAGvB,cAAC2B,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMZ,UAAU,UAAhB,sCC7CKa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c0ae491.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Table from 'react-bootstrap/Table'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { Container, Row } from 'react-bootstrap'\n\n\nfunction SingleLeggin(props: { leggin: any }) {\n  const { leggin } = props\n\n  return (\n    <tr>\n      <td>{leggin.leggin_id}</td>\n      <td><a target='_blank' href={`https://www.myprotein.pl/${leggin.leggin_id}.html`}>{leggin.leggin_name}</a></td>\n      <td>{leggin.leggin_price}</td>\n      <td>{leggin.leggin_rrp}</td>\n      <td>{leggin.sizes?.join(', ')}</td>\n    </tr>\n  )\n}\n\n\nfunction Leggins(props: { leggins: any[] }) {\n  const { leggins } = props\n\n  return (<>\n    {leggins.map((item) => <SingleLeggin leggin={item} />)}\n  </>)\n}\n\nfunction getLeggins() {\n  return fetch('https://europe-west2-affordable-leggins.cloudfunctions.net/run')\n}\n\nfunction App() {\n  const [leggins, setLeggins] = useState<any>([])\n  const [loaded, setLoaded] = useState<any>(false)\n\n  useEffect(() => {\n    if (loaded) { return }\n\n    const listOfLeggins = getLeggins()\n      .then((response) => response.json())\n      .then((json) => json.leggins)\n      .then((leggins) => leggins.sort((itemA: any, itemB: any) => itemA.leggin_price - itemB.leggin_price))\n      .then((legginsResult) => {\n        setLeggins(legginsResult)\n        setLoaded(true)\n      })\n  })\n\n  const renderLeggins = () => {\n    if (loaded) {\n      return <Leggins leggins={leggins} />\n    } else {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Row>\n          <Table striped bordered hover variant=\"dark\" responsive>\n            <thead>\n              <tr>\n                <th>Leggin ID</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Retail price</th>\n                <th>Sizes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {renderLeggins()}\n            </tbody>\n          </Table>\n        </Row>\n      </Container>\n\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}